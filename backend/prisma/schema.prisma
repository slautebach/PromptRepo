generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  googleId      String?   @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  prompts       Prompt[]
  sharedPrompts SharedPrompt[]
  groups        Group[]
  ownedGroups   Group[]   @relation("GroupOwner")
}

model Prompt {
  id          String    @id @default(uuid())
  title       String
  content     String
  variables   Json      // Stores variable definitions
  isDeleted   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  versions    Version[]
  sharedWith  SharedPrompt[]
  tags        Tag[]
  folders     Folder[]
  groups      Group[]   @relation("GroupPrompts")
}

model Version {
  id        String   @id @default(uuid())
  content   String
  variables Json
  createdAt DateTime @default(now())
  promptId  String
  prompt    Prompt   @relation(fields: [promptId], references: [id])
}

model SharedPrompt {
  id        String   @id @default(uuid())
  promptId  String
  prompt    Prompt   @relation(fields: [promptId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  isEditable Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Group {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  ownerId     String
  owner       User      @relation("GroupOwner", fields: [ownerId], references: [id])
  members     User[]
  prompts     Prompt[]  @relation("GroupPrompts")
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique
  prompts   Prompt[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  prompts   Prompt[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 